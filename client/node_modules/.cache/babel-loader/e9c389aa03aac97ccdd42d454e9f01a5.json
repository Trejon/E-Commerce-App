{"ast":null,"code":"var _jsxFileName = \"/Users/trejonstallsworth/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionsPage from \"../collection/collection.component\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions.js\";\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsPageWithSpinner = WithSpinner(CollectionsPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 64\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionsLoaded\n}); // const mapDispatchToProps = dispatch => ({\n//   fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n// });\n\nexport default connect(mapStateToProps, {\n  fetchCollectionsStartAsync\n})(ShopPage);","map":{"version":3,"sources":["/Users/trejonstallsworth/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","CollectionsOverview","CollectionsPage","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","WithSpinner","CollectionsPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AAEA,SAASC,0BAAT,QAA2C,kCAA3C;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,iCAAtE;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAGA,MAAMC,0BAA0B,GAAGD,WAAW,CAACJ,eAAD,CAA9C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEP,MAAAA;AAAF,QAAiC,KAAKQ,KAA5C;AACAR,IAAAA,0BAA0B;AAC3B;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,oBAAT;AAA+BC,MAAAA;AAA/B,QAAsD,KAAKJ,KAAjE;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGL,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAsEH,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGL,KAAD,iBAAW,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAE,CAACI;AAAxC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAjBoC;;AAoBvC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAC/Ce,EAAAA,oBAAoB,EAAEV,0BADyB;AAE/CW,EAAAA,kBAAkB,EAAEV;AAF2B,CAAD,CAAhD,C,CAKA;AACA;AACA;;AAEA,eAAeL,OAAO,CAACiB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAyDK,QAAzD,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from \"react-redux\";\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionsPage from \"../collection/collection.component\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions.js\";\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors'\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\n\nconst CollectionsPageWithSpinner = WithSpinner(CollectionsPage)\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props; \n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const { match, isCollectionFetching, isCollectionLoaded } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} render={(props) =>(<CollectionsOverviewWithSpinner isLoading={isCollectionFetching } {...props} />)} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) =>(<CollectionsPageWithSpinner isLoading={!isCollectionLoaded} {...props} />)}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching, \n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n// });\n\nexport default connect(mapStateToProps, { fetchCollectionsStartAsync })(ShopPage);\n"]},"metadata":{},"sourceType":"module"}