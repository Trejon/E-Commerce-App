{"ast":null,"code":"import { createSelector } from 'reselect';\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3,\n  womens: 4,\n  mens: 5\n};\n\nconst selectCollections = state => state.shop;\n\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => Object.keys(collections).map(key => collections[key]));\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam]));","map":{"version":3,"sources":["/Users/trejonstallsworth/crwn-clothing/src/redux/shop/shop.selectors.js"],"names":["createSelector","COLLECTION_ID_MAP","hats","sneakers","jackets","womens","mens","selectCollections","state","shop","selectCollectionsForPreview","collections","Object","keys","map","key","selectCollection","collectionUrlParam","find","collection","id"],"mappings":"AAAC,SAASA,cAAT,QAA+B,UAA/B;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,IAAI,EAAE,CADkB;AAExBC,EAAAA,QAAQ,EAAE,CAFc;AAGxBC,EAAAA,OAAO,EAAE,CAHe;AAIxBC,EAAAA,MAAM,EAAE,CAJgB;AAKxBC,EAAAA,IAAI,EAAE;AALkB,CAA1B;;AAQA,MAAMC,iBAAiB,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAzC;;AAEA,OAAO,MAAMC,2BAA2B,GAAGV,cAAc,CACxD,CAACO,iBAAD,CADwD,EAExDI,WAAW,IAAIC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,GAAzB,CAA6BC,GAAG,IAAIJ,WAAW,CAACI,GAAD,CAA/C,CAFyC,CAAlD;AAKP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAAIjB,cAAc,CAClE,CAACO,iBAAD,CADkE,EAElEI,WAAW,IAAIA,WAAW,CAACO,IAAZ,CAAiBC,UAAU,IAAIA,UAAU,CAACC,EAAX,KAAkBnB,iBAAiB,CAACgB,kBAAD,CAAlE,CAFmD,CAA7D","sourcesContent":[" import { createSelector } from 'reselect'; \n\n const COLLECTION_ID_MAP = {\n   hats: 1, \n   sneakers: 2, \n   jackets: 3, \n   womens: 4, \n   mens: 5\n }\n\n const selectCollections = state => state.shop;\n\n export const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections => Object.keys(collections).map(key => collections[key])\n);\n\n export const selectCollection = collectionUrlParam => createSelector(\n   [selectCollections], \n   collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])\n )"]},"metadata":{},"sourceType":"module"}